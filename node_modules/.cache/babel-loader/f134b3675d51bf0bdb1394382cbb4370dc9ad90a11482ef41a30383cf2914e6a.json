{"ast":null,"code":"var _jsxFileName = \"/Users/arslanparkar/Arslan Parkar/work/job/react/react3fibre/3dreact/src/component/scene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport * as THREE from 'three';\nimport { useLoader } from 'react-three-fiber';\nimport img from '../texture/brick.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = () => {\n  _s();\n  const scene = useRef();\n  useFrame(() => {\n    scene.current.rotation.y += 0.04;\n    scene.current.rotation.x += 0.04;\n    scene.current.rotation.z += 0.04;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: scene,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(\"meshLambertMaterial\", {\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n_s(Scene, \"YVYqSyO8VNvJyHyfsHxfYhhKZ5U=\", true);\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","THREE","useLoader","img","jsxDEV","_jsxDEV","Scene","_s","scene","useFrame","current","rotation","y","x","z","ref","children","Box","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arslanparkar/Arslan Parkar/work/job/react/react3fibre/3dreact/src/component/scene.jsx"],"sourcesContent":["\n\nimport React, { useRef } from 'react'\nimport * as THREE from 'three'\nimport {  useLoader } from 'react-three-fiber'\nimport img from '../texture/brick.png'\n\nconst Scene = () => {\n    const scene = useRef();\n    useFrame(() => {\n      scene.current.rotation.y += 0.04;\n      scene.current.rotation.x += 0.04;\n      scene.current.rotation.z += 0.04;\n    });\n    return (\n      <group ref={scene}>\n        <Box>\n          <meshLambertMaterial color=\"white\" />\n        </Box>\n      </group>\n    );\n  };\nexport default Scene; "],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAUC,SAAS,QAAQ,mBAAmB;AAC9C,OAAOC,GAAG,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGR,MAAM,EAAE;EACtBS,QAAQ,CAAC,MAAM;IACbD,KAAK,CAACE,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;IAChCJ,KAAK,CAACE,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAI,IAAI;IAChCL,KAAK,CAACE,OAAO,CAACC,QAAQ,CAACG,CAAC,IAAI,IAAI;EAClC,CAAC,CAAC;EACF,oBACET,OAAA;IAAOU,GAAG,EAAEP,KAAM;IAAAQ,QAAA,eAChBX,OAAA,CAACY,GAAG;MAAAD,QAAA,eACFX,OAAA;QAAqBa,KAAK,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEZ,CAAC;AAACf,EAAA,CAdED,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAeX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}