{"ast":null,"code":"var _jsxFileName = \"/Users/arslanparkar/Arslan Parkar/work/job/react3fibre/my-3d-react-app/src/component/cube.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cube(props) {\n  _s();\n  // This reference gives us direct access to the THREE.Mesh object\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false);\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => ref.current.rotation.x += 0.01);\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ...props,\n    ref: ref,\n    scale: clicked ? 1.5 : 1,\n    onClick: event => click(!clicked),\n    onPointerOver: event => hover(true),\n    onPointerOut: event => hover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      wireframe: props.wireframe,\n      color: hovered ? \"green\" : \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(cube, \"0OgHC5oxYRXb5Ql/IS5MENLnPH4=\", false, function () {\n  return [useFrame];\n});\nexport default cube;","map":{"version":3,"names":["React","useRef","useState","useFrame","jsxDEV","_jsxDEV","cube","props","_s","hovered","hover","clicked","click","state","delta","ref","current","rotation","x","scale","onClick","event","onPointerOver","onPointerOut","children","args","fileName","_jsxFileName","lineNumber","columnNumber","wireframe","color"],"sources":["/Users/arslanparkar/Arslan Parkar/work/job/react3fibre/my-3d-react-app/src/component/cube.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n \nfunction cube(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false);\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01));\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}\n    >\n      <cylinderGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial\n        wireframe={props.wireframe}\n        color={hovered ? \"green\" : \"blue\"}\n      />\n    </mesh>\n  );\n}\n \nexport default cube;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,KAAK,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACxC;EACAC,QAAQ,CAAC,CAACU,KAAK,EAAEC,KAAK,KAAMC,GAAG,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAK,CAAC;EAC5D;EACA,oBACEb,OAAA;IAAA,GACME,KAAK;IACTQ,GAAG,EAAEA,GAAI;IACTI,KAAK,EAAER,OAAO,GAAG,GAAG,GAAG,CAAE;IACzBS,OAAO,EAAGC,KAAK,IAAKT,KAAK,CAAC,CAACD,OAAO,CAAE;IACpCW,aAAa,EAAGD,KAAK,IAAKX,KAAK,CAAC,IAAI,CAAE;IACtCa,YAAY,EAAGF,KAAK,IAAKX,KAAK,CAAC,KAAK,CAAE;IAAAc,QAAA,gBAEtCnB,OAAA;MAAkBoB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrCxB,OAAA;MACEyB,SAAS,EAAEvB,KAAK,CAACuB,SAAU;MAC3BC,KAAK,EAAEtB,OAAO,GAAG,OAAO,GAAG;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEX;AAACrB,EAAA,CAxBQF,IAAI;EAAA,QAMXH,QAAQ;AAAA;AAoBV,eAAeG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}